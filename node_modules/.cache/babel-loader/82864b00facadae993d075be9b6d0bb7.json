{"ast":null,"code":"import { e as effectInit } from '../shared/effect-init.mjs';\nimport { e as effectTarget } from '../shared/effect-target.mjs';\nimport { e as effectVirtualTransitionEnd } from '../shared/effect-virtual-transition-end.mjs';\nimport { k as getSlideTransformEl } from '../shared/utils.mjs';\n\nfunction EffectFade(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}\n\nexport { EffectFade as default };","map":{"version":3,"sources":["C:/Users/NIVESH SAITEJA/OneDrive/Documents/GitHub/MyPortfolio/node_modules/swiper/modules/effect-fade.mjs"],"names":["e","effectInit","effectTarget","effectVirtualTransitionEnd","k","getSlideTransformEl","EffectFade","_ref","swiper","extendParams","on","fadeEffect","crossFade","setTranslate","slides","params","i","length","slideEl","offset","swiperSlideOffset","tx","virtualTranslate","translate","ty","isHorizontal","slideOpacity","Math","max","abs","progress","min","targetEl","style","opacity","transform","setTransition","duration","transformElements","map","forEach","el","transitionDuration","allSlides","effect","overwriteParams","slidesPerView","slidesPerGroup","watchSlidesProgress","spaceBetween","cssMode","default"],"mappings":"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","sourcesContent":["import { e as effectInit } from '../shared/effect-init.mjs';\nimport { e as effectTarget } from '../shared/effect-target.mjs';\nimport { e as effectVirtualTransitionEnd } from '../shared/effect-virtual-transition-end.mjs';\nimport { k as getSlideTransformEl } from '../shared/utils.mjs';\n\nfunction EffectFade(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}\n\nexport { EffectFade as default };\n"]},"metadata":{},"sourceType":"module"}