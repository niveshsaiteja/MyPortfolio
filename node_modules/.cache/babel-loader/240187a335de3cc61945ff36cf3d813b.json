{"ast":null,"code":"import { i as elementTransitionEnd } from './utils.mjs';\n\nfunction effectVirtualTransitionEnd(_ref) {\n  let {\n    swiper,\n    duration,\n    transformElements,\n    allSlides\n  } = _ref;\n  const {\n    activeIndex\n  } = swiper;\n\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowRoot && slideEl.shadowRoot === el.parentNode)[0];\n      return slide;\n    }\n\n    return el.parentElement;\n  };\n\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}\n\nexport { effectVirtualTransitionEnd as e };","map":{"version":3,"sources":["C:/Users/NIVESH SAITEJA/OneDrive/Documents/GitHub/MyPortfolio/node_modules/swiper/shared/effect-virtual-transition-end.mjs"],"names":["i","elementTransitionEnd","effectVirtualTransitionEnd","_ref","swiper","duration","transformElements","allSlides","activeIndex","getSlide","el","parentElement","slide","slides","filter","slideEl","shadowRoot","parentNode","params","virtualTranslate","eventTriggered","transitionEndTarget","transformEl","classList","contains","getSlideIndex","forEach","destroyed","animating","evt","window","CustomEvent","bubbles","cancelable","wrapperEl","dispatchEvent","e"],"mappings":"AAAA,SAASA,CAAC,IAAIC,oBAAd,QAA0C,aAA1C;;AAEA,SAASC,0BAAT,CAAoCC,IAApC,EAA0C;AACxC,MAAI;AACFC,IAAAA,MADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,iBAHE;AAIFC,IAAAA;AAJE,MAKAJ,IALJ;AAMA,QAAM;AACJK,IAAAA;AADI,MAEFJ,MAFJ;;AAGA,QAAMK,QAAQ,GAAGC,EAAE,IAAI;AACrB,QAAI,CAACA,EAAE,CAACC,aAAR,EAAuB;AACrB;AACA,YAAMC,KAAK,GAAGR,MAAM,CAACS,MAAP,CAAcC,MAAd,CAAqBC,OAAO,IAAIA,OAAO,CAACC,UAAR,IAAsBD,OAAO,CAACC,UAAR,KAAuBN,EAAE,CAACO,UAAhF,EAA4F,CAA5F,CAAd;AACA,aAAOL,KAAP;AACD;;AACD,WAAOF,EAAE,CAACC,aAAV;AACD,GAPD;;AAQA,MAAIP,MAAM,CAACc,MAAP,CAAcC,gBAAd,IAAkCd,QAAQ,KAAK,CAAnD,EAAsD;AACpD,QAAIe,cAAc,GAAG,KAArB;AACA,QAAIC,mBAAJ;;AACA,QAAId,SAAJ,EAAe;AACbc,MAAAA,mBAAmB,GAAGf,iBAAtB;AACD,KAFD,MAEO;AACLe,MAAAA,mBAAmB,GAAGf,iBAAiB,CAACQ,MAAlB,CAAyBQ,WAAW,IAAI;AAC5D,cAAMZ,EAAE,GAAGY,WAAW,CAACC,SAAZ,CAAsBC,QAAtB,CAA+B,wBAA/B,IAA2Df,QAAQ,CAACa,WAAD,CAAnE,GAAmFA,WAA9F;AACA,eAAOlB,MAAM,CAACqB,aAAP,CAAqBf,EAArB,MAA6BF,WAApC;AACD,OAHqB,CAAtB;AAID;;AACDa,IAAAA,mBAAmB,CAACK,OAApB,CAA4BhB,EAAE,IAAI;AAChCT,MAAAA,oBAAoB,CAACS,EAAD,EAAK,MAAM;AAC7B,YAAIU,cAAJ,EAAoB;AACpB,YAAI,CAAChB,MAAD,IAAWA,MAAM,CAACuB,SAAtB,EAAiC;AACjCP,QAAAA,cAAc,GAAG,IAAjB;AACAhB,QAAAA,MAAM,CAACwB,SAAP,GAAmB,KAAnB;AACA,cAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,WAAX,CAAuB,eAAvB,EAAwC;AAClDC,UAAAA,OAAO,EAAE,IADyC;AAElDC,UAAAA,UAAU,EAAE;AAFsC,SAAxC,CAAZ;AAIA7B,QAAAA,MAAM,CAAC8B,SAAP,CAAiBC,aAAjB,CAA+BN,GAA/B;AACD,OAVmB,CAApB;AAWD,KAZD;AAaD;AACF;;AAED,SAAS3B,0BAA0B,IAAIkC,CAAvC","sourcesContent":["import { i as elementTransitionEnd } from './utils.mjs';\n\nfunction effectVirtualTransitionEnd(_ref) {\n  let {\n    swiper,\n    duration,\n    transformElements,\n    allSlides\n  } = _ref;\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowRoot && slideEl.shadowRoot === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}\n\nexport { effectVirtualTransitionEnd as e };\n"]},"metadata":{},"sourceType":"module"}