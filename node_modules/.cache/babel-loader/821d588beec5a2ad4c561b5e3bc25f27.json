{"ast":null,"code":"function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n\n  swiper.recalcSlides();\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n\n  let newActiveIndex = activeIndex + 1;\n\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n\n  swiper.recalcSlides();\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n\n  const baseLength = swiper.slides.length;\n\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n\n  swiper.recalcSlides();\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  swiper.recalcSlides();\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n\n  swiper.removeSlide(slidesIndexes);\n}\n\nfunction Manipulation(_ref) {\n  let {\n    swiper\n  } = _ref;\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}\n\nexport { Manipulation as default };","map":{"version":3,"sources":["C:/Users/NIVESH SAITEJA/OneDrive/Documents/GitHub/MyPortfolio/node_modules/swiper/modules/manipulation.mjs"],"names":["appendSlide","slides","swiper","params","slidesEl","loop","loopDestroy","appendElement","slideEl","tempDOM","document","createElement","innerHTML","append","children","i","length","recalcSlides","loopCreate","observer","isElement","update","prependSlide","activeIndex","newActiveIndex","prependElement","prepend","slideTo","addSlide","index","activeIndexBuffer","loopedSlides","baseLength","slidesBuffer","currentSlide","remove","unshift","removeSlide","slidesIndexes","indexToRemove","Math","max","removeAllSlides","push","Manipulation","_ref","Object","assign","bind","default"],"mappings":"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","sourcesContent":["function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nfunction Manipulation(_ref) {\n  let {\n    swiper\n  } = _ref;\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}\n\nexport { Manipulation as default };\n"]},"metadata":{},"sourceType":"module"}